package main

import (
	"context"
	"strings"
	"testing"

	"github.com/google/go-cmp/cmp"
	"github.com/shurcooL/githubv4"
)

type mockPlatform struct {
	pullRequests []EdgePullRequest
	starsCount   map[string]int
}

func (m *mockPlatform) PullRequests(ctx context.Context) ([]EdgePullRequest, error) {
	return m.pullRequests, nil
}

func (m *mockPlatform) RepositoryStarsCount(ctx context.Context, ownerName string) (int, error) {
	return m.starsCount[ownerName], nil
}

func TestContributions(t *testing.T) {
	mock := &mockPlatform{
		pullRequests: []EdgePullRequest{
			{
				Node: struct {
					Repository struct {
						NameWithOwner  githubv4.String
						StargazerCount githubv4.Int
					}
					Merged githubv4.Boolean
				}{
					Repository: struct {
						NameWithOwner  githubv4.String
						StargazerCount githubv4.Int
					}{
						NameWithOwner:  "lima-vm/lima",
						StargazerCount: 15_965,
					},
					Merged: true,
				},
			},
			{
				Node: struct {
					Repository struct {
						NameWithOwner  githubv4.String
						StargazerCount githubv4.Int
					}
					Merged githubv4.Boolean
				}{
					Repository: struct {
						NameWithOwner  githubv4.String
						StargazerCount githubv4.Int
					}{
						NameWithOwner:  "golangci/golangci-lint",
						StargazerCount: 16_047,
					},
					Merged: true,
				},
			},
		},
		starsCount: map[string]int{
			"lima-vm/lima":           15_965,
			"golangci/golangci-lint": 16_047,
		},
	}

	repositories, err := Contributions(context.Background(), mock)
	if err != nil {
		t.Fatalf("Contributions() error = %v", err)
	}

	expected := []Repository{
		{OwnerName: "golangci/golangci-lint", StarCount: 16_047},
		{OwnerName: "lima-vm/lima", StarCount: 15_965},
		{OwnerName: "cognitedata/cognite-sdk-python", StarCount: 0},
		{OwnerName: "cue-lang/cue", StarCount: 0},
		{OwnerName: "golang/build", StarCount: 0},
		{OwnerName: "golang/go", StarCount: 0},
		{OwnerName: "golang/mod", StarCount: 0},
		{OwnerName: "golang/net", StarCount: 0},
		{OwnerName: "golang/text", StarCount: 0},
		{OwnerName: "golang/tools", StarCount: 0},
		{OwnerName: "golang/vulndb", StarCount: 0},
		{OwnerName: "golang/website", StarCount: 0},
		{OwnerName: "golang/wiki", StarCount: 0},
		{OwnerName: "google/re2", StarCount: 0},
		{OwnerName: "protocolbuffers/protobuf-go", StarCount: 0},
	}

	if diff := cmp.Diff(expected, repositories); diff != "" {
		t.Errorf("Contributions() mismatch (-want +got):\n%s", diff)
	}
}

func TestContributionReport(t *testing.T) {
	repositories := []Repository{
		{OwnerName: "golangci/golangci-lint", StarCount: 16_047},
		{OwnerName: "lima-vm/lima", StarCount: 15_965},
	}

	var sb strings.Builder
	ContributionReport(&sb, repositories)

	output := sb.String()
	expected := `<!---
Code generated by gencontribs; DO NOT EDIT.

To update the doc:
GITHUB_TOKEN=<YOUR_TOKEN> go run .
-->

# Open Source Projects I've Ever Contributed

See also [APPRECIATIONS](./APPRECIATIONS.md) for testimonials about these contributions.

## Google Go Git Repositories

_links pointed to a log with my contributions_

* [build](https://go.googlesource.com/build/+log?author=Oleksandr%20Redko)
* [go](https://go.googlesource.com/go/+log?author=Oleksandr%20Redko)
* [net](https://go.googlesource.com/net/+log?author=Oleksandr%20Redko)
* [mod](https://go.googlesource.com/mod/+log?author=Oleksandr%20Redko)
* [protobuf](https://go.googlesource.com/protobuf/+log?author=Oleksandr%20Redko)
* [tools](https://go.googlesource.com/tools/+log?author=Oleksandr%20Redko)
* [text](https://go.googlesource.com/text/+log?author=Oleksandr%20Redko)
* [vulndb](https://go.googlesource.com/vulndb/+log?author=Oleksandr%20Redko)
* [website](https://go.googlesource.com/website/+log?author=Oleksandr%20Redko)
* [wiki](https://go.googlesource.com/wiki/+log?author=Oleksandr%20Redko)

## Google Code Git Repositories

_links pointed to a log with my contributions_

* [re2](https://code.googlesource.com/re2/+log?author=Oleksandr%20Redko)

## GitHub Projects

_sorted by stars descending_

* [golangci/golangci-lint](https://github.com/golangci/golangci-lint/commits?author=alexandear)
* [lima-vm/lima](https://github.com/lima-vm/lima/commits?author=alexandear)
`

	if diff := cmp.Diff(expected, output); diff != "" {
		t.Errorf("ContributionReport() mismatch (-want +got):\n%s", diff)
	}
}
